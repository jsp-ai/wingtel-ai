version: "3.9"

services:
  # Main database for subscriber, billing, user data
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: mvno
      POSTGRES_PASSWORD: mvno_dev_password
      POSTGRES_DB: mvno_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mvno -d mvno_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Event streaming for microservices communication
  kafka:
    image: redpandadata/redpanda:v24.3.1
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --node-id=0
      - --kafka-addr=PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr=PLAINTEXT://kafka:29092,OUTSIDE://localhost:9092
    ports:
      - "9092:9092"
      - "9644:9644"
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster info"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Vector database for AI knowledge base (using pgvector extension)
  vector-db:
    image: ankane/pgvector
    restart: unless-stopped
    environment:
      POSTGRES_USER: vector
      POSTGRES_PASSWORD: vector_dev_password
      POSTGRES_DB: vector_db
    ports:
      - "5433:5432"
    volumes:
      - vectordata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vector -d vector_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database administration GUI
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@wingtel.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
      vector-db:
        condition: service_healthy

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  vectordata:
  redisdata:

networks:
  default:
    name: wingtel-network 